{"version":3,"sources":["context/auth.tsx","settings/constants.ts","theme/index.ts","components/InlineLoader/InlineLoader.tsx","routes.tsx","serviceWorker.ts","index.tsx"],"names":["AuthContext","React","createContext","AuthProvider","props","useState","address","setAddress","window","Provider","value","verifyMetaMask","cb","Web3","on","accounts","location","reload","href","selectedAddress","networkId","console","log","handleNetworkChanged","currentProvider","setTimeout","children","COLLECTIONS","MY_COLLECTIONS","COLLECTION","NEW_CARD","MY_PURCHASED_CARDS","TRANSACTIONS","API","COLLECTIONS_ALL_get","MY_COLLECTIONS_get","NEW_COLLECTION_post","RENAME_COLLECTION_post","TRANSACTIONS_get","TRANSACTIONS_CREATE_post","MY_CARDS_get","COLLECTION_MODE","ALL","GENERAL","theme","createTheme","lightThemePrimitives","primaryFontFamily","primary","primary700","name","typography","font11","fontFamily","fontSize","fontWeight","lineHeight","fontBold11","font12","fontBold12","font13","fontBold13","font14","fontBold14","font16","fontBold16","font18","fontBold18","font21","fontBold21","font24","fontBold24","font30","fontBold30","font350","font450","sizing","scale25","scale30","borders","borderE6","borderColor","borderStyle","borderWidth","borderEA","colors","primary400","red400","red700","greyE6","textDark","textNormal","borderF1","backgroundF7","lightGreen","warning","blue400","purple400","buttonBorderRadius","Container","styled","display","justifyContent","alignItems","height","width","padding","position","Dots","background","$theme","opacity","borderRadius","transform","margin","animationDuration","animationIterationCount","animationName","from","to","animationDelay","delay","Dot","InLineLoader","memo","color","AdminLayout","lazy","NotFound","Collections","NewCollections","Collection","NewCard","MyPurchasedCards","Transactions","PrivateRoute","rest","useContext","render","Routes","fallback","path","exact","component","Boolean","hostname","match","client","ApolloClient","uri","process","REACT_APP_API_URL","cache","InMemoryCache","App","engine","Styletron","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab4ef6a3.chunk.js","sourcesContent":["import React from 'react';\nimport Web3 from 'web3';\n\ntype AuthProps = {\n    address: string;\n    verifyMetaMask: Function;\n};\n\nexport const AuthContext = React.createContext({} as AuthProps);\n\nconst AuthProvider = (props: any) => {\n\n    const [address, setAddress] = React.useState(null);\n\n    window['web3'] = null;\n\n    const handleAddressChanged = (accounts) => {\n        if (typeof window['ethereum'] !== 'undefined') {\n            window.location.reload(false);\n            window.location.href = \"/\";\n            setAddress(window['ethereum'].selectedAddress);\n        }\n    }\n    const handleNetworkChanged = (networkId) => {\n        console.log('networkId :>> ', networkId);\n        window.location.reload(false);\n        window.location.href = \"/\";\n    }\n\n    function verifyMetaMask(cb){\n        if (typeof window['ethereum'] !== 'undefined') {\n            window['web3'] = new Web3(window['ethereum']);\n            window['ethereum'].on('accountsChanged', (accounts) => handleAddressChanged(accounts));\n            window['ethereum'].on('networkChanged', networkId => handleNetworkChanged(networkId));\n            setAddress(window['ethereum'].selectedAddress);\n        }\n        else if (window['web3']) {\n            window['web3'] = new Web3(window['web3'].currentProvider);\n        }\n        else {\n            window['web3'] = null;\n        }\n        setTimeout(cb, 100);\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                address,\n                verifyMetaMask\n            }}\n        >\n            <>{props.children}</>\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthProvider;\n","/* **************** ROUTE CONSTANT START ************************** */\nexport const COLLECTIONS = '/';\nexport const MY_COLLECTIONS = '/my-collections';\nexport const COLLECTION = '/collection/:id/:mode';\nexport const NEW_CARD = '/new-card';\nexport const MY_PURCHASED_CARDS = '/my-cards';\nexport const TRANSACTIONS = '/transactions';\n\n\n/* **************** ROUTE CONSTANT START ************************** */\nexport const API = {\n    COLLECTIONS_ALL_get: '/collection/all',\n    MY_COLLECTIONS_get: '/collection/read',\n    NEW_COLLECTION_post: '/collection/create',\n    RENAME_COLLECTION_post: '/collection/rename',\n    TRANSACTIONS_get: '/transaction/retrieve',\n    TRANSACTIONS_CREATE_post: '/transaction/create',\n    MY_CARDS_get: '/card/my-cards',\n    COLLECTION: '/card/collectionId',\n};\n\n\nexport const CURRENCY = '$';\nexport const COLLECTION_MODE = {\n    ALL: 'all',\n    GENERAL: 'general'\n};\n","import { createTheme, lightThemePrimitives } from 'baseui';\n\nexport const theme = createTheme(\n  {\n    ...lightThemePrimitives,\n    primaryFontFamily: \"'Lato', sans-serif\",\n    primary: '#00C58D',\n    primary700: '#00bd87',\n  },\n  {\n    name: 'custom-typography',\n    typography: {\n      primaryFontFamily: \"'Lato', sans-serif\",\n      font11: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '11px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold11: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '11px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font12: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '12px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold12: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '12px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font13: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '13px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold13: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '13px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font14: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '14px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold14: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font16: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '16px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold16: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '16px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font18: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '18px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold18: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '18px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font21: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '21px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold21: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '21px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font24: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '24px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold24: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '24px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font30: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '30px',\n        fontWeight: 400,\n        lineHeight: 1.5,\n      },\n      fontBold30: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: '30px',\n        fontWeight: 700,\n        lineHeight: 1.5,\n      },\n      font350: {\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight: '24px',\n      },\n      font450: {\n        fontSize: '15px',\n        fontWeight: 700,\n        lineHeight: '22px',\n      },\n    },\n    sizing: {\n      scale25: '25px',\n      scale30: '30px',\n    },\n    borders: {\n      borderE6: {\n        borderColor: '#E6E6E6',\n        borderStyle: 'solid',\n        borderWidth: '1px',\n      },\n      borderEA: {\n        borderColor: '#eaeaea',\n        borderStyle: 'solid',\n        borderWidth: '1px',\n      },\n    },\n    colors: {\n      primary: '#00C58D',\n      primary700: '#00bd87',\n      primary400: '#03D3B5',\n      red400: '#FC5C63',\n      red700: '#FC6687',\n      greyE6: '#E6E6E6',\n      textDark: '#161F6A',\n      textNormal: '#666D92',\n      borderE6: '#E6E6E6',\n      borderF1: '#f1f1f1',\n      backgroundF7: '#f7f7f7',\n      lightGreen: '#00d4b5',\n      warning: '#f4c243',\n      blue400: '#2067fa',\n      purple400: '#8A6AFC',\n    },\n    buttonBorderRadius: '3px',\n  }\n);\n","import React, { FC, memo } from \"react\";\nimport { styled } from \"baseui\";\n\nconst Container = styled(\"div\", () => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"500px\",\n  width: \"100%\",\n  padding: \"5%\",\n  position: \"relative\"\n}));\n\nconst Dots = styled(\"div\", props => ({\n  display: \"inline-block\",\n  background: props.$theme.colors.primary,\n  height: \"5px\",\n  width: \"5px\",\n  opacity: 0,\n  borderRadius: \"50%\",\n  transform: \"translateX(-300px)\",\n  margin: \"0 2px 0 2px\",\n  animationDuration: \"4s\",\n  animationIterationCount: \"infinite\",\n  animationName: {\n    from: {\n      transform: \"translateX(0px)\",\n      opacity: \"0.8\"\n    },\n    to: {\n      transform: \"translateX(300px)\",\n      opacity: \"0\"\n    }\n  },\n  animationDelay: props.delay && props.delay\n}));\n\nexport interface InLineLoaderProps {\n  color?: string;\n}\n\nconst Dot = delay => {\n  return <Dots delay={delay} />;\n};\n\nexport const InLineLoader: FC<InLineLoaderProps> = memo(props => {\n  const { color = \"#4092de\" } = props;\n\n  return (\n    <Container color={color}>\n      <Dot delay=\".8s\" />\n      <Dot delay=\".7s\" />\n      <Dot delay=\".6s\" />\n      <Dot delay=\".5s\" />\n      <Dot delay=\".4s\" />\n      <Dot delay=\".3s\" />\n      <Dot delay=\".2s\" />\n      <Dot delay=\".1s\" />\n    </Container>\n  );\n});\n","import React, { useContext, lazy, Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport {\n  COLLECTION,\n  COLLECTIONS,\n  MY_COLLECTIONS, MY_PURCHASED_CARDS, NEW_CARD, TRANSACTIONS,\n} from 'settings/constants';\nimport AuthProvider, { AuthContext } from 'context/auth';\nimport { InLineLoader } from 'components/InlineLoader/InlineLoader';\nconst AdminLayout = lazy(() => import('containers/Layout/Layout'));\nconst NotFound = lazy(() => import('containers/NotFound/NotFound'));\n\nconst Collections = lazy(() => import('containers/Collections/Collections'));\nconst NewCollections = lazy(() => import('containers/NewCollections/NewCollections'));\nconst Collection = lazy(() => import('containers/Collection/Collection'));\nconst NewCard = lazy(() => import('containers/NewCardForm/NewCardForm'));\nconst MyPurchasedCards = lazy(() => import('containers/MyPurchasedCards/MyPurchasedCards'));\nconst Transactions = lazy(() => import('containers/Transactions/Transactions'));\n\nfunction PrivateRoute({ children, ...rest }) {\n  const { address } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n          children\n        //   !!address ? (\n        //   children\n        // ) : (\n        //   <Redirect\n        //     to={{\n        //       pathname: '/',\n        //       state: { from: location },\n        //     }}\n        //   />\n        // )\n      }\n    />\n  );\n}\n\nconst Routes = () => {\n  return (\n      <>\n        <AuthProvider>\n          <Suspense fallback={<InLineLoader />}>\n            <Switch>\n\n              <PrivateRoute path={MY_COLLECTIONS}>\n                <AdminLayout>\n                  <Suspense fallback={<InLineLoader />}>\n                    <NewCollections />\n                  </Suspense>\n                </AdminLayout>\n              </PrivateRoute>\n\n              <PrivateRoute path={COLLECTION}>\n                <AdminLayout>\n                  <Suspense fallback={<InLineLoader />}>\n                    <Collection />\n                  </Suspense>\n                </AdminLayout>\n              </PrivateRoute>\n\n              <PrivateRoute path={NEW_CARD}>\n                <AdminLayout>\n                  <Suspense fallback={<InLineLoader />}>\n                    <NewCard />\n                  </Suspense>\n                </AdminLayout>\n              </PrivateRoute>\n\n              <PrivateRoute path={MY_PURCHASED_CARDS}>\n                <AdminLayout>\n                  <Suspense fallback={<InLineLoader />}>\n                    <MyPurchasedCards />\n                  </Suspense>\n                </AdminLayout>\n              </PrivateRoute>\n\n              <PrivateRoute path={TRANSACTIONS}>\n                <AdminLayout>\n                  <Suspense fallback={<InLineLoader />}>\n                    <Transactions />\n                  </Suspense>\n                </AdminLayout>\n              </PrivateRoute>\n\n              <AdminLayout>\n                <Route exact={true} path={COLLECTIONS}>\n                  <Collections />\n                </Route>\n              </AdminLayout>\n              <Route component={NotFound} />\n            </Switch>\n          </Suspense>\n        </AuthProvider>\n        </>\n  );\n};\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider } from 'baseui';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\nimport { theme } from './theme';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-spring-modal/dist/index.css';\nimport 'overlayscrollbars/css/OverlayScrollbars.css';\nimport 'components/Scrollbar/scrollbar.css';\nimport './theme/global.css';\nimport DemoSwitcher from 'components/DemoSwitcher/SwitcherBtn';\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_URL,\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const engine = new Styletron();\n\n  return (\n    <ApolloProvider client={client as any}>\n      <StyletronProvider value={engine}>\n        <BaseProvider theme={theme}>\n          <BrowserRouter>\n            <Routes />\n          </BrowserRouter>\n          {/*<DemoSwitcher />*/}\n        </BaseProvider>\n      </StyletronProvider>\n    </ApolloProvider>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}